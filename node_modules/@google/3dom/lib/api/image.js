/* @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A constructor factory for a Image class. The Image is defined based on
 * a provided implementation for all specified 3DOM scene graph element types.
 *
 * The sole reason for using this factory pattern is to enable sound type
 * checking while also providing for the ability to stringify the factory so
 * that it can be part of a runtime-generated Worker script.
 *
 * @see ../api.ts
 */
export function defineImage(ThreeDOMElement) {
    const $kernel = Symbol('kernel');
    const $uri = Symbol('uri');
    const $name = Symbol('name');
    class Image extends ThreeDOMElement {
        constructor(kernel, serialized) {
            super(kernel);
            this[$kernel] = kernel;
            this[$uri] = serialized.uri || null;
            this[$name] = serialized.name;
        }
        get name() {
            return this[$name];
        }
        get type() {
            return this.uri != null ? 'external' : 'embedded';
        }
        get uri() {
            return this[$uri];
        }
        async setURI(uri) {
            this[$kernel].mutate(this, 'uri', uri);
        }
    }
    return Image;
}
//# sourceMappingURL=image.js.map