{"version":3,"file":"texture-info.js","sourceRoot":"","sources":["../../src/api/texture-info.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAUH;;;;;;;;;;GAUG;AACH,MAAM,UAAU,iBAAiB,CAC7B,eAA6C;;IAC/C,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IACjC,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IAEnC,MAAM,WAAY,SAAQ,eAAe;QAKvC,YAAY,MAAmB,EAAE,UAAiC;YAChE,KAAK,CAAC,MAAM,CAAC,CAAC;YAHT,QAAU,GAAiB,IAAI,CAAC;YAKrC,IAAI,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;YAEvB,MAAM,EAAC,OAAO,EAAC,GAAG,UAAU,CAAC;YAE7B,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;aACzD;QACH,CAAC;QAED,IAAI,OAAO;YACT,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC;QAED,KAAK,CAAC,UAAU,CAAC,OAAqB;YACpC,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC;QAC3B,CAAC;KACF;SAtBS,QAAQ;IAwBlB,OAAO,WAAW,CAAC;AACrB,CAAC","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ConstructedWithArguments, Constructor, Texture, TextureInfo as TextureInfoInterface, ThreeDOMElement} from '../api.js';\nimport {SerializedTextureInfo} from '../protocol.js';\n\nimport {ModelKernel} from './model-kernel.js';\n\nexport type TextureInfoConstructor = Constructor<TextureInfoInterface>&\n    ConstructedWithArguments<[ModelKernel, SerializedTextureInfo]>;\n\n/**\n * A constructor factory for a TextureInfo class. The TextureInfo is defined\n * based on a provided implementation for all specified 3DOM scene graph element\n * types.\n *\n * The sole reason for using this factory pattern is to enable sound type\n * checking while also providing for the ability to stringify the factory so\n * that it can be part of a runtime-generated Worker script.\n *\n * @see ../api.ts\n */\nexport function defineTextureInfo(\n    ThreeDOMElement: Constructor<ThreeDOMElement>): TextureInfoConstructor {\n  const $kernel = Symbol('kernel');\n  const $texture = Symbol('texture');\n\n  class TextureInfo extends ThreeDOMElement implements TextureInfoInterface {\n    private[$kernel]: ModelKernel;\n\n    private[$texture]: Texture|null = null;\n\n    constructor(kernel: ModelKernel, serialized: SerializedTextureInfo) {\n      super(kernel);\n\n      this[$kernel] = kernel;\n\n      const {texture} = serialized;\n\n      if (texture != null) {\n        this[$texture] = kernel.deserialize('texture', texture);\n      }\n    }\n\n    get texture() {\n      return this[$texture];\n    }\n\n    async setTexture(texture: Texture|null): Promise<void> {\n      await this[$kernel].mutate(this, 'texture', texture);\n      this[$texture] = texture;\n    }\n  }\n\n  return TextureInfo;\n}\n"]}