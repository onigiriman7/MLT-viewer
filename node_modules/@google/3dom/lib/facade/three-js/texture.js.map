{"version":3,"file":"texture.js","sourceRoot":"","sources":["../../../src/facade/three-js/texture.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;AAQH,OAAO,EAAC,KAAK,EAAC,MAAM,YAAY,CAAC;AAEjC,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AACrC,OAAO,EAAC,eAAe,EAAC,MAAM,wBAAwB,CAAC;AAGvD,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACjC,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAEnC;;GAEG;AACH,MAAM,OAAO,OAAQ,SAAQ,eAAe;IAI1C,YACI,KAAiB,EAAE,OAAoB,EACvC,kBAAqC;QACvC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC;QANrC,QAAS,GAAe,IAAI,CAAC;QAC7B,QAAU,GAAiB,IAAI,CAAC;QAOrC,MAAM,IAAI,GAAG,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC;QAC7C,MAAM,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAAC,GAAG,OAAO,CAAC;QAE5D,IAAI,YAAY,IAAI,IAAI,EAAE;YACxB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAE7D,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC;aAClE;SACF;QAED,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAErD,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,kBAAkB,CAAC,CAAC;aAC7D;SACF;IACH,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAED,MAAM;QACJ,MAAM,UAAU,GAA+B,KAAK,CAAC,MAAM,EAAE,CAAC;QAE9D,MAAM,EAAC,OAAO,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC;QAE/B,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;SACvC;QAED,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;SACrC;QAED,OAAO,UAA+B,CAAC;IACzC,CAAC;CACF;KAnDS,OAAO,OACP,QAAQ","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Texture as ThreeTexture} from 'three';\n\nimport {Texture as GLTFTexture} from '../../gltf-2.0.js';\nimport {SerializedTexture} from '../../protocol.js';\nimport {Texture as TextureInterface} from '../api.js';\n\nimport {Image} from './image.js';\nimport {ModelGraft} from './model-graft.js';\nimport {Sampler} from './sampler.js';\nimport {ThreeDOMElement} from './three-dom-element.js';\n\n\nconst $source = Symbol('source');\nconst $sampler = Symbol('sampler');\n\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Texture extends ThreeDOMElement implements TextureInterface {\n  private[$source]: Image|null = null;\n  private[$sampler]: Sampler|null = null;\n\n  constructor(\n      graft: ModelGraft, texture: GLTFTexture,\n      correlatedTextures: Set<ThreeTexture>) {\n    super(graft, texture, correlatedTextures);\n\n    const glTF = graft.correlatedSceneGraph.gltf;\n    const {sampler: samplerIndex, source: imageIndex} = texture;\n\n    if (samplerIndex != null) {\n      const sampler = glTF.samplers && glTF.samplers[samplerIndex];\n\n      if (sampler != null) {\n        this[$sampler] = new Sampler(graft, sampler, correlatedTextures);\n      }\n    }\n\n    if (imageIndex != null) {\n      const image = glTF.images && glTF.images[imageIndex];\n\n      if (image != null) {\n        this[$source] = new Image(graft, image, correlatedTextures);\n      }\n    }\n  }\n\n  get sampler() {\n    return this[$sampler];\n  }\n\n  get source() {\n    return this[$source];\n  }\n\n  toJSON(): SerializedTexture {\n    const serialized: Partial<SerializedTexture> = super.toJSON();\n\n    const {sampler, source} = this;\n\n    if (sampler != null) {\n      serialized.sampler = sampler.toJSON();\n    }\n\n    if (source != null) {\n      serialized.source = source.toJSON();\n    }\n\n    return serialized as SerializedTexture;\n  }\n}\n"]}