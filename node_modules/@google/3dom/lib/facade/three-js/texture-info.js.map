{"version":3,"file":"texture-info.js","sourceRoot":"","sources":["../../../src/facade/three-js/texture-info.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;AASH,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AACrC,OAAO,EAAC,eAAe,EAAC,MAAM,wBAAwB,CAAC;AAGvD,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAEnC;;GAEG;AACH,MAAM,OAAO,WAAY,SAAQ,eAAe;IAI9C,YACI,KAAiB,EAAE,WAA4B,EAC/C,kBAAqC;QACvC,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC;QALzC,QAAU,GAAiB,IAAI,CAAC;QAOrC,MAAM,IAAI,GAAG,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC;QAC7C,MAAM,EAAC,KAAK,EAAE,YAAY,EAAC,GAAG,WAAW,CAAC;QAC1C,MAAM,OAAO,GAAG,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC;YAC3D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC;QAET,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC;SAClE;IACH,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,MAAM,UAAU,GAAmC,KAAK,CAAC,MAAM,EAAE,CAAC;QAElE,MAAM,EAAC,OAAO,EAAC,GAAG,IAAI,CAAC;QAEvB,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;SACvC;QAED,OAAO,UAA+B,CAAC;IACzC,CAAC;CACF;KAjCS,QAAQ","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Texture as ThreeTexture} from 'three';\n\nimport {TextureInfo as GLTFTextureInfo} from '../../gltf-2.0.js';\nimport {SerializedTexture, SerializedTextureInfo} from '../../protocol.js';\nimport {TextureInfo as TextureInfoInterface} from '../api.js';\n\nimport {ModelGraft} from './model-graft.js';\nimport {Texture} from './texture.js';\nimport {ThreeDOMElement} from './three-dom-element.js';\n\n\nconst $texture = Symbol('texture');\n\n/**\n * TextureInfo facade implementation for Three.js materials\n */\nexport class TextureInfo extends ThreeDOMElement implements\n    TextureInfoInterface {\n  private[$texture]: Texture|null = null;\n\n  constructor(\n      graft: ModelGraft, textureInfo: GLTFTextureInfo,\n      correlatedTextures: Set<ThreeTexture>) {\n    super(graft, textureInfo, correlatedTextures);\n\n    const glTF = graft.correlatedSceneGraph.gltf;\n    const {index: textureIndex} = textureInfo;\n    const texture = textureIndex != null && glTF.textures != null ?\n        glTF.textures[textureIndex] :\n        null;\n\n    if (texture != null) {\n      this[$texture] = new Texture(graft, texture, correlatedTextures);\n    }\n  }\n\n  get texture() {\n    return this[$texture];\n  }\n\n  toJSON(): SerializedTexture {\n    const serialized: Partial<SerializedTextureInfo> = super.toJSON();\n\n    const {texture} = this;\n\n    if (texture != null) {\n      serialized.texture = texture.toJSON();\n    }\n\n    return serialized as SerializedTexture;\n  }\n}\n"]}