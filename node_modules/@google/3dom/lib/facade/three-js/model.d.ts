import { SerializedModel } from '../../protocol.js';
import { Model as ModelInterface } from '../api.js';
import { CorrelatedSceneGraph } from './correlated-scene-graph.js';
import { Material } from './material.js';
import { ModelGraft } from './model-graft.js';
import { ThreeDOMElement } from './three-dom-element.js';
declare const $modelUri: unique symbol;
declare const $materials: unique symbol;
/**
 * A Model facades the top-level GLTF object returned by Three.js' GLTFLoader.
 * Currently, the model only bothers itself with the materials in the Three.js
 * scene graph.
 */
export declare class Model extends ThreeDOMElement implements ModelInterface {
    private [$modelUri];
    private [$materials];
    constructor(graft: ModelGraft, modelUri: string, correlatedSceneGraph: CorrelatedSceneGraph);
    /**
     * A flat list of all unique materials found in this scene graph. Materials
     * are listed in the order they appear during pre-order, depth-first traveral
     * of the scene graph.
     *
     * TODO(#1003): How do we handle non-active scenes?
     * TODO(#1002): Desctibe and enforce traversal order
     */
    get materials(): Material[];
    toJSON(): SerializedModel;
}
export {};
