import { MeshStandardMaterial } from 'three';
import { Material as GLTFMaterial } from '../../gltf-2.0.js';
import { SerializedMaterial } from '../../protocol.js';
import { Material as MaterialInterface } from '../api.js';
import { ModelGraft } from './model-graft.js';
import { PBRMetallicRoughness } from './pbr-metallic-roughness.js';
import { TextureInfo } from './texture-info.js';
import { ThreeDOMElement } from './three-dom-element.js';
declare const $pbrMetallicRoughness: unique symbol;
declare const $normalTexture: unique symbol;
declare const $occlusionTexture: unique symbol;
declare const $emissiveTexture: unique symbol;
/**
 * Material facade implementation for Three.js materials
 */
export declare class Material extends ThreeDOMElement implements MaterialInterface {
    private [$pbrMetallicRoughness];
    private [$normalTexture];
    private [$occlusionTexture];
    private [$emissiveTexture];
    constructor(graft: ModelGraft, material: GLTFMaterial, correlatedMaterials: Set<MeshStandardMaterial>);
    get pbrMetallicRoughness(): PBRMetallicRoughness | null;
    get normalTexture(): TextureInfo | null;
    get occlusionTexture(): TextureInfo | null;
    get emissiveTexture(): TextureInfo | null;
    toJSON(): SerializedMaterial;
}
export {};
