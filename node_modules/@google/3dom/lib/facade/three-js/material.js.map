{"version":3,"file":"material.js","sourceRoot":"","sources":["../../../src/facade/three-js/material.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MeshStandardMaterial, Texture as ThreeTexture} from 'three';\n\nimport {Material as GLTFMaterial} from '../../gltf-2.0.js';\nimport {SerializedMaterial} from '../../protocol.js';\nimport {Material as MaterialInterface} from '../api.js';\n\nimport {ModelGraft} from './model-graft.js';\nimport {PBRMetallicRoughness} from './pbr-metallic-roughness.js';\nimport {TextureInfo} from './texture-info.js';\nimport {ThreeDOMElement} from './three-dom-element.js';\n\n\nconst $pbrMetallicRoughness = Symbol('pbrMetallicRoughness');\nconst $normalTexture = Symbol('normalTexture');\nconst $occlusionTexture = Symbol('occlusionTexture');\nconst $emissiveTexture = Symbol('emissiveTexture');\n\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Material extends ThreeDOMElement implements MaterialInterface {\n  private[$pbrMetallicRoughness]: PBRMetallicRoughness|null = null;\n\n  private[$normalTexture]: TextureInfo|null = null;\n  private[$occlusionTexture]: TextureInfo|null = null;\n  private[$emissiveTexture]: TextureInfo|null = null;\n\n  constructor(\n      graft: ModelGraft, material: GLTFMaterial,\n      correlatedMaterials: Set<MeshStandardMaterial>) {\n    super(graft, material, correlatedMaterials);\n\n    const {\n      pbrMetallicRoughness,\n      normalTexture,\n      occlusionTexture,\n      emissiveTexture\n    } = material;\n\n    if (pbrMetallicRoughness != null) {\n      this[$pbrMetallicRoughness] = new PBRMetallicRoughness(\n          graft, pbrMetallicRoughness, correlatedMaterials);\n    }\n\n    const normalTextures = new Set<ThreeTexture>();\n    const occlusionTextures = new Set<ThreeTexture>();\n    const emissiveTextures = new Set<ThreeTexture>();\n\n    for (const material of correlatedMaterials) {\n      const {normalMap, aoMap, emissiveMap} = material;\n\n      if (normalTexture != null && normalMap != null) {\n        normalTextures.add(normalMap);\n      }\n\n      if (occlusionTexture != null && aoMap != null) {\n        occlusionTextures.add(aoMap);\n      }\n\n      if (emissiveTexture != null && emissiveMap != null) {\n        emissiveTextures.add(emissiveMap);\n      }\n    }\n\n    if (normalTextures.size > 0) {\n      this[$normalTexture] =\n          new TextureInfo(graft, normalTexture!, normalTextures);\n    }\n\n    if (occlusionTextures.size > 0) {\n      this[$occlusionTexture] =\n          new TextureInfo(graft, occlusionTexture!, occlusionTextures);\n    }\n\n    if (emissiveTextures.size > 0) {\n      this[$emissiveTexture] =\n          new TextureInfo(graft, emissiveTexture!, emissiveTextures);\n    }\n  }\n\n  get pbrMetallicRoughness() {\n    return this[$pbrMetallicRoughness];\n  }\n\n  get normalTexture() {\n    return this[$normalTexture];\n  }\n\n  get occlusionTexture() {\n    return this[$occlusionTexture];\n  }\n\n  get emissiveTexture() {\n    return this[$emissiveTexture];\n  }\n\n  toJSON(): SerializedMaterial {\n    const serialized: Partial<SerializedMaterial> = super.toJSON();\n    const {\n      pbrMetallicRoughness,\n      normalTexture,\n      occlusionTexture,\n      emissiveTexture\n    } = this;\n    if (pbrMetallicRoughness != null) {\n      serialized.pbrMetallicRoughness = pbrMetallicRoughness.toJSON();\n    }\n\n    if (normalTexture != null) {\n      serialized.normalTexture = normalTexture.toJSON();\n    }\n\n    if (occlusionTexture != null) {\n      serialized.occlusionTexture = occlusionTexture.toJSON();\n    }\n\n    if (emissiveTexture != null) {\n      serialized.emissiveTexture = emissiveTexture.toJSON();\n    }\n\n    return serialized as SerializedMaterial;\n  }\n}\n"]}